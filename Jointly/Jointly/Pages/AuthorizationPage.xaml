<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:d="http://xamarin.com/schemas/2014/forms/design"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:controls="clr-namespace:Jointly.Controls"
             xmlns:viewmodels="clr-namespace:Jointly.ViewModels"
             xmlns:ext="clr-namespace:Jointly.Extensions"
             xmlns:pages="clr-namespace:Jointly.Pages"
             xmlns:effects="clr-namespace:Jointly.Effects"
             mc:Ignorable="d"
             x:Name="Page"
             x:Class="Jointly.Pages.AuthorizationPage">
    <ContentPage.Resources>
        <Style TargetType="Entry">
            <Setter Property="VerticalOptions" Value="CenterAndExpand"/>
            <Setter Property="Text" Value=""/>
            <Setter Property="Visual" Value="Material"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="BackgroundColor" Value="Transparent"/>
        </Style>

        <Style x:Key="PrimaryContainer" TargetType="Grid">
            <Setter Property="InputTransparent" Value="True"/>
            <Setter Property="Opacity" Value="0"/>
            <Setter Property="BackgroundColor" Value="Yellow"/>
            <Setter Property="Margin" Value="20"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="VerticalOptions" Value="CenterAndExpand"/>
            <Setter Property="HorizontalOptions" Value="Center"/>
            <Setter Property="WidthRequest" Value="400"/>
            <Setter Property="RowDefinitions">
                <Setter.Value>
                    <RowDefinitionCollection>
                        <RowDefinition Height="auto"/>
                    </RowDefinitionCollection>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="SecondaryContainer" TargetType="Grid">
            <Setter Property="Padding" Value="20"/>
            <Setter Property="BackgroundColor" Value="White"/>
            <Setter Property="RowSpacing" Value="10"/>
            <Setter Property="RowDefinitions">
                <Setter.Value>
                    <RowDefinitionCollection>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                    </RowDefinitionCollection>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="PrimaryButton" TargetType="Button">
            <Setter Property="Command" Value="{Binding AuthCommand}"/>
            <Setter Property="BackgroundColor" Value="DarkBlue"/>
            <Setter Property="TextColor" Value="Yellow"/>
            <Setter Property="CornerRadius" Value="5"/>
            <Setter Property="VerticalOptions" Value="Start"/>
        </Style>
        <Style x:Key="SecondaryButton" TargetType="Button">
            <Setter Property="Command" Value="{Binding ChangeAuthTypeCommand}"/>
            <Setter Property="BackgroundColor" Value="Transparent"/>
            <Setter Property="TextColor" Value="DarkSlateGray"/>
            <Setter Property="VerticalOptions" Value="StartAndExpand"/>
        </Style>

        <x:Double x:Key="ContainerCornerRadius">5.0</x:Double>
    </ContentPage.Resources>
    <ContentPage.Content>
        <Grid>
            <controls:VideoView 
                VerticalOptions="FillAndExpand"
                HorizontalOptions="FillAndExpand"
                Source="Videos/background.mp4"
                Loop="True"/>

            <!--#region SignIn-->
            <Grid
                Style="{StaticResource PrimaryContainer}">
                <Grid.Triggers>
                    <Trigger 
                        TargetType="Grid"
                        Property="Opacity"
                        Value="0.8">
                        <Setter Property="InputTransparent" Value="False"/>
                    </Trigger>
                    <DataTrigger 
                        TargetType="Grid"
                        Binding="{Binding AuthType}"
                        Value="{x:Static viewmodels:AuthorizationTypes.SignIn}">
                        <DataTrigger.EnterActions>
                            <pages:StageEnterAction/>
                        </DataTrigger.EnterActions>
                        <DataTrigger.ExitActions>
                            <pages:ExitStageAction/>
                        </DataTrigger.ExitActions>
                    </DataTrigger>
                </Grid.Triggers>

                <Grid.Effects>
                    <effects:RoundCorners CornerRadius="{StaticResource ContainerCornerRadius}"/>
                </Grid.Effects>

                <Grid
                    Grid.Row="0"
                    Style="{StaticResource SecondaryContainer}">
                    
                    <Grid.Effects>
                        <effects:RoundCorners CornerRadius="{StaticResource ContainerCornerRadius}"/>
                    </Grid.Effects>

                    <Grid
                        Grid.Row="0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                        </Grid.RowDefinitions>

                        <Entry 
                            Grid.Row="0"
                            Text="{Binding SignInModel.Login, FallbackValue=''}"
                            Placeholder="{ext:Translate Authorization_Login}"
                            ReturnType="Next"
                            ReturnCommandParameter="{Binding Source={x:Reference PasswordEntry}}"
                            Completed="Entry_Completed"/>

                        <Entry 
                            x:Name="PasswordEntry"
                            Grid.Row="1"
                            Text="{Binding SignInModel.Password, FallbackValue=''}"
                            Placeholder="{ext:Translate Authorization_Password}"
                            IsPassword="True"
                            ReturnType="Done"/>
                    </Grid>

                    <Button
                        Grid.Row="1"
                        Text="{ext:Translate Authorization_SignIn}"
                        Style="{StaticResource PrimaryButton}"/>

                    <Button 
                        Grid.Row="2"
                        Text="{ext:Translate Authorization_SignUp}"
                        Style="{StaticResource SecondaryButton}"/>
                </Grid>
            </Grid>
            <!--#endregion-->

            <!--#region SignUp-->
            <Grid
                Style="{StaticResource PrimaryContainer}">
                <Grid.Triggers>
                    <Trigger 
                        TargetType="Grid"
                        Property="Opacity"
                        Value="0.8">
                        <Setter Property="InputTransparent" Value="False"/>
                    </Trigger>
                    <DataTrigger 
                        TargetType="Grid"
                        Binding="{Binding AuthType}"
                        Value="{x:Static viewmodels:AuthorizationTypes.SignUp}">
                        <DataTrigger.EnterActions>
                            <pages:StageEnterAction/>
                        </DataTrigger.EnterActions>
                        <DataTrigger.ExitActions>
                            <pages:ExitStageAction/>
                        </DataTrigger.ExitActions>
                    </DataTrigger>
                </Grid.Triggers>

                <Grid.Effects>
                    <effects:RoundCorners CornerRadius="{StaticResource ContainerCornerRadius}"/>
                </Grid.Effects>

                <Grid
                    Style="{StaticResource SecondaryContainer}">

                    <Grid.Effects>
                        <effects:RoundCorners CornerRadius="{StaticResource ContainerCornerRadius}"/>
                    </Grid.Effects>

                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                        </Grid.RowDefinitions>

                        <Entry 
                            Grid.Row="0"
                            Text="{Binding SignUpModel.Username, FallbackValue=''}"
                            Placeholder="{ext:Translate Authorization_Username}"
                            ReturnType="Next"
                            ReturnCommandParameter="{Binding Source={x:Reference EmailEntry}}"
                            Completed="Entry_Completed">

                            <Entry.Triggers>
                                <DataTrigger TargetType="Entry" Binding="{Binding SignUpModel.IsUsernameValid}" Value="True">
                                    <Setter Property="TextColor" Value="DarkGreen"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Entry" Binding="{Binding SignUpModel.IsUsernameValid}" Value="False">
                                    <Setter Property="TextColor" Value="Default"/>
                                </DataTrigger>
                            </Entry.Triggers>
                        </Entry>
                        <Entry 
                            x:Name="EmailEntry"
                            Grid.Row="1"
                            Text="{Binding SignUpModel.Email, FallbackValue=''}"
                            Placeholder="{ext:Translate Authorization_Email}"
                            Keyboard="Email"
                            ReturnType="Next"
                            ReturnCommandParameter="{Binding Source={x:Reference PhoneEntry}}"
                            Completed="Entry_Completed">

                            <Entry.Triggers>
                                <DataTrigger TargetType="Entry" Binding="{Binding SignUpModel.IsEmailValid}" Value="True">
                                    <Setter Property="TextColor" Value="DarkGreen"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Entry" Binding="{Binding SignUpModel.IsEmailValid}" Value="False">
                                    <Setter Property="TextColor" Value="Default"/>
                                </DataTrigger>
                            </Entry.Triggers>
                        </Entry>
                        <Entry 
                            x:Name="PhoneEntry"
                            Grid.Row="2"
                            Text="{Binding SignUpModel.Phone, FallbackValue=''}"
                            Placeholder="{ext:Translate Authorization_Phone}"
                            Keyboard="Telephone"
                            ReturnType="Done"
                            ReturnCommand="{Binding AuthCommand}"
                            Completed="Entry_Completed">

                            <Entry.Triggers>
                                <DataTrigger TargetType="Entry" Binding="{Binding SignUpModel.IsPhoneValid}" Value="True">
                                    <Setter Property="TextColor" Value="DarkGreen"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Entry" Binding="{Binding SignUpModel.IsPhoneValid}" Value="False">
                                    <Setter Property="TextColor" Value="Default"/>
                                </DataTrigger>
                            </Entry.Triggers>
                        </Entry>
                    </Grid>

                    <Button
                        Grid.Row="1"
                        Text="{ext:Translate Authorization_SignUp}"
                        Style="{StaticResource PrimaryButton}"/>

                    <Button 
                        Grid.Row="2"
                        Text="{ext:Translate Authorization_SignIn}"
                        Style="{StaticResource SecondaryButton}"/>
                </Grid>
            </Grid>
            <!--#endregion-->
        </Grid>
    </ContentPage.Content>
</ContentPage>